DROP SCHEMA IF EXISTS PowerJ;
CREATE SCHEMA PowerJ DEFAULT CHARACTER SET utf8;
USE PowerJ;

CREATE TABLE PowerJ.Errors (
	CASEID INT NOT NULL,
	ERRID INT NOT NULL,
	CASENO CHAR(12) NOT NULL,
	COMMENT VARCHAR(32600) NOT NULL,
	PRIMARY KEY (CASEID ASC))
ENGINE = InnoDB;

CREATE TABLE PowerJ.Facilities (
	FACID SMALLINT(6) NOT NULL,
	DASH CHAR(1) NOT NULL,
	WLOAD CHAR(1) NOT NULL,
	CODE VARCHAR(4) NOT NULL,
	NAME VARCHAR(80) NOT NULL,
	PRIMARY KEY (FACID ASC))
ENGINE = InnoDB;

CREATE TABLE PowerJ.Personnel (
	PERID SMALLINT(6) NOT NULL,
	ACCESS INT NOT NULL,
	CODE CHAR(2) NOT NULL,
	INITIALS CHAR(3) NOT NULL,
	PLAST VARCHAR(30) NOT NULL,
	PFIRST VARCHAR(30) NOT NULL,
	PRIMARY KEY (PERID ASC))
ENGINE = InnoDB;

CREATE TABLE PowerJ.Rules (
	ID SMALLINT(6) NOT NULL,
	NAME VARCHAR(32) NOT NULL,
	DESCR VARCHAR(256) NOT NULL,
	PRIMARY KEY (ID ASC),
	UNIQUE INDEX Rules_UNIQUE (NAME ASC))
ENGINE = InnoDB;

CREATE TABLE PowerJ.Setup (
	STPID SMALLINT(6) NOT NULL,
	STPVAL VARCHAR(64) NOT NULL,
	PRIMARY KEY (STPID ASC))
ENGINE = InnoDB;

CREATE TABLE PowerJ.Specialties (
	SPYID SMALLINT(6) NOT NULL,
	DASH CHAR(1) NOT NULL,
	WLOAD CHAR(1) NOT NULL,
	CODESPEC CHAR(1) NOT NULL,
	SPYNAME VARCHAR(16) NOT NULL,
	PRIMARY KEY (SPYID ASC))
ENGINE = InnoDB;

CREATE TABLE PowerJ.Coder1 (
	ID SMALLINT(6) NOT NULL,
	RULEID SMALLINT(6) NOT NULL,
	COUNT SMALLINT(6) NOT NULL,
	VALUE1 DECIMAL(5, 3) NOT NULL,
	VALUE2 DECIMAL(5, 3) NOT NULL,
	VALUE3 DECIMAL(5, 3) NOT NULL,
	NAME VARCHAR(16) NOT NULL,
	DESCR VARCHAR(128) NOT NULL,
	PRIMARY KEY (ID ASC),
	UNIQUE INDEX Coder1_UNIQUE (NAME ASC),
	INDEX IX_Coder1_RULEID (RULEID ASC),
	CONSTRAINT FK_Coder1_Rules
	FOREIGN KEY (RULEID)
	REFERENCES PowerJ.Rules (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.Coder2 (
	ID SMALLINT(6) NOT NULL,
	RULEID SMALLINT(6) NOT NULL,
	COUNT SMALLINT(6) NOT NULL,
	VALUE1 DECIMAL(5, 3) NOT NULL,
	VALUE2 DECIMAL(5, 3) NOT NULL,
	VALUE3 DECIMAL(5, 3) NOT NULL,
	NAME VARCHAR(16) NOT NULL,
	DESCR VARCHAR(128) NOT NULL,
	PRIMARY KEY (ID ASC),
	UNIQUE INDEX Coder2_UNIQUE (NAME ASC),
	INDEX IX_Coder2_RULEID (RULEID ASC),
	CONSTRAINT FK_Coder2_Rules
	FOREIGN KEY (RULEID)
	REFERENCES PowerJ.Rules (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.Coder3 (
	ID SMALLINT(6) NOT NULL,
	RULEID SMALLINT(6) NOT NULL,
	COUNT SMALLINT(6) NOT NULL,
	VALUE1 DECIMAL(5, 3) NOT NULL,
	VALUE2 DECIMAL(5, 3) NOT NULL,
	VALUE3 DECIMAL(5, 3) NOT NULL,
	NAME VARCHAR(16) NOT NULL,
	DESCR VARCHAR(128) NOT NULL,
	PRIMARY KEY (ID ASC),
	UNIQUE INDEX Coder3_UNIQUE (NAME ASC),
	INDEX IX_Coder3_RULEID (RULEID ASC),
	CONSTRAINT FK_Coder3_Rules
	FOREIGN KEY (RULEID)
	REFERENCES PowerJ.Rules (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.Coder4 (
	ID SMALLINT(6) NOT NULL,
	RULEID SMALLINT(6) NOT NULL,
	COUNT SMALLINT(6) NOT NULL,
	VALUE1 DECIMAL(5, 3) NOT NULL,
	VALUE2 DECIMAL(5, 3) NOT NULL,
	VALUE3 DECIMAL(5, 3) NOT NULL,
	NAME VARCHAR(16) NOT NULL,
	DESCR VARCHAR(128) NOT NULL,
	PRIMARY KEY (ID ASC),
	UNIQUE INDEX Coder4_UNIQUE (NAME ASC),
	INDEX IX_Coder4_RULEID (RULEID ASC),
	CONSTRAINT FK_Coder4_Rules
	FOREIGN KEY (RULEID)
	REFERENCES PowerJ.Rules (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.Subspecial (
	SUBID SMALLINT(6) NOT NULL,
	SPYID SMALLINT(6) NOT NULL,
	SUBINIT VARCHAR(3) NOT NULL,
	SUBNAME VARCHAR(30) NOT NULL,
	PRIMARY KEY (SUBID ASC),
	INDEX IX_Subspecial_SPYID (SPYID ASC),
	CONSTRAINT FK_Subspecial_Specialties
	FOREIGN KEY (SPYID)
	REFERENCES PowerJ.Specialties (SPYID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.Accessions (
	ACCID SMALLINT(6) NOT NULL,
	SPYID SMALLINT(6) NOT NULL,
	DASH CHAR(1) NOT NULL,
	WLOAD CHAR(1) NOT NULL,
	ACCNAME VARCHAR(30) NOT NULL,
	PRIMARY KEY (ACCID ASC),
	INDEX IX_Accessions_SPYID (SPYID ASC),
	CONSTRAINT FK_Accessions_Specialties
	FOREIGN KEY (SPYID)
	REFERENCES PowerJ.Specialties (SPYID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.MasterSpecimens (
	MSID SMALLINT(6) NOT NULL,
	SPYID SMALLINT(6) NOT NULL,
	SUBID SMALLINT(6) NOT NULL,
	PROCID SMALLINT(6) NOT NULL,
	ISLN SMALLINT(6) NOT NULL,
	GROSS SMALLINT(6) NOT NULL,
	EMBED SMALLINT(6) NOT NULL,
	MICROTOMY SMALLINT(6) NOT NULL,
	ROUTE SMALLINT(6) NOT NULL,
	SIGNOUT SMALLINT(6) NOT NULL,
	CODE1B SMALLINT(6) NOT NULL,
	CODE1M SMALLINT(6) NOT NULL,
	CODE1R SMALLINT(6) NOT NULL,
	CODE2B SMALLINT(6) NOT NULL,
	CODE2M SMALLINT(6) NOT NULL,
	CODE2R SMALLINT(6) NOT NULL,
	CODE3B SMALLINT(6) NOT NULL,
	CODE3M SMALLINT(6) NOT NULL,
	CODE3R SMALLINT(6) NOT NULL,
	CODE4B SMALLINT(6) NOT NULL,
	CODE4M SMALLINT(6) NOT NULL,
	CODE4R SMALLINT(6) NOT NULL,
	CODE VARCHAR(15) NOT NULL,
	DESCR VARCHAR(80) NOT NULL,
	PRIMARY KEY (MSID ASC),
	UNIQUE INDEX MasterSpecimens_UNIQUE (CODE ASC),
	INDEX IX_MS_SPYID (SPYID ASC),
	INDEX IX_MS_SUBID (SUBID ASC),
	INDEX IX_MS_CODE1B (CODE1B ASC),
	INDEX IX_MS_CODE2B (CODE2B ASC),
	INDEX IX_MS_CODE3B (CODE3B ASC),
	INDEX IX_MS_CODE4B (CODE4B ASC),
	INDEX IX_MS_CODE1M (CODE1M ASC),
	INDEX IX_MS_CODE2M (CODE2M ASC),
	INDEX IX_MS_CODE3M (CODE3M ASC),
	INDEX IX_MS_CODE4M (CODE4M ASC),
	INDEX IX_MS_CODE1R (CODE1R ASC),
	INDEX IX_MS_CODE2R (CODE2R ASC),
	INDEX IX_MS_CODE3R (CODE3R ASC),
	INDEX IX_MS_CODE4R (CODE4R ASC),
	CONSTRAINT FK_MS_Specialties
	FOREIGN KEY (SPYID)
	REFERENCES PowerJ.Specialties (SPYID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_MS_Subspecial
	FOREIGN KEY (SUBID)
	REFERENCES PowerJ.Subspecial (SUBID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_MS_Coder1b
	FOREIGN KEY (CODE1B)
	REFERENCES PowerJ.Coder1 (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_MS_Coder2b
	FOREIGN KEY (CODE2B)
	REFERENCES PowerJ.Coder2 (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_MS_Coder3b
	FOREIGN KEY (CODE3B)
	REFERENCES PowerJ.Coder3 (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_MS_Coder4b
	FOREIGN KEY (CODE4B)
	REFERENCES PowerJ.Coder4 (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_MS_Coder1m
	FOREIGN KEY (CODE1M)
	REFERENCES PowerJ.Coder1 (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_MS_Coder2m
	FOREIGN KEY (CODE2M)
	REFERENCES PowerJ.Coder2 (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_MS_Coder3m
	FOREIGN KEY (CODE3M)
	REFERENCES PowerJ.Coder3 (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_MS_Coder4m
	FOREIGN KEY (CODE4M)
	REFERENCES PowerJ.Coder4 (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_MS_Coder1r
	FOREIGN KEY (CODE1R)
	REFERENCES PowerJ.Coder1 (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_MS_Coder2r
	FOREIGN KEY (CODE2R)
	REFERENCES PowerJ.Coder2 (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_MS_Coder3r
	FOREIGN KEY (CODE3R)
	REFERENCES PowerJ.Coder3 (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_MS_Coder4r
	FOREIGN KEY (CODE4R)
	REFERENCES PowerJ.Coder4 (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.Groups (
	ID SMALLINT(6) NOT NULL,
	GRP SMALLINT(6) NOT NULL,
	CODE1 SMALLINT(6) NOT NULL,
	CODE2 SMALLINT(6) NOT NULL,
	CODE3 SMALLINT(6) NOT NULL,
	CODE4 SMALLINT(6) NOT NULL,
	NAME VARCHAR(8) NOT NULL,
	PRIMARY KEY (ID ASC),
	UNIQUE INDEX Groups_UNIQUE (NAME ASC),
	INDEX IX_Groups_CODE1 (CODE1 ASC),
	INDEX IX_Groups_CODE2 (CODE2 ASC),
	INDEX IX_Groups_CODE3 (CODE3 ASC),
	INDEX IX_Groups_CODE4 (CODE4 ASC),
	CONSTRAINT FK_Groups_Coder1
	FOREIGN KEY (CODE1)
	REFERENCES PowerJ.Coder1 (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Groups_Coder2
	FOREIGN KEY (CODE2)
	REFERENCES PowerJ.Coder2 (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Groups_Coder3
	FOREIGN KEY (CODE3)
	REFERENCES PowerJ.Coder3 (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Groups_Coder4
	FOREIGN KEY (CODE4)
	REFERENCES PowerJ.Coder4 (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.MasterOrders (
	ID SMALLINT(6) NOT NULL,
	GRPID SMALLINT(6) NOT NULL,
	CODE VARCHAR(15) NOT NULL,
	DESCR VARCHAR(80) NOT NULL,
	PRIMARY KEY (ID ASC),
	UNIQUE INDEX MasterOrders_UNIQUE (CODE ASC),
	INDEX IX_MO_GRPID (GRPID ASC),
	CONSTRAINT FK_MO_Groups
	FOREIGN KEY (GRPID)
	REFERENCES PowerJ.Groups (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.Cases (
	CASEID INT NOT NULL,
	FACID SMALLINT(6) NOT NULL,
	MSID SMALLINT(6) NOT NULL,
	GROSSID SMALLINT(6) NOT NULL,
	FINALID SMALLINT(6) NOT NULL,
	SPYID SMALLINT(6) NOT NULL,
	SUBID SMALLINT(6) NOT NULL,
	GROSSTAT SMALLINT(6) NOT NULL,
	ROUTETAT SMALLINT(6) NOT NULL,
	FINALTAT SMALLINT(6) NOT NULL,
	TOTALTAT SMALLINT(6) NOT NULL,
	PROID SMALLINT(6) NOT NULL,
	NOSPECS SMALLINT(6) NOT NULL,
	NOBLOCKS SMALLINT(6) NOT NULL,
	NOSLIDES SMALLINT(6) NOT NULL,
	NOSYNOPT SMALLINT(6) NOT NULL,
	NOFS SMALLINT(6) NOT NULL,
	ACCESSED date NOT NULL,
	GROSSED date NOT NULL,
	ROUTED date NOT NULL,
	FINALED datetime NOT NULL,
	VALUE1 DECIMAL(5, 3) NOT NULL,
	VALUE2 DECIMAL(5, 3) NOT NULL,
	VALUE3 DECIMAL(5, 3) NOT NULL,
	VALUE4 DECIMAL(5, 3) NOT NULL,
	CASENO CHAR(12) NOT NULL,
	PRIMARY KEY (CASEID ASC),
	UNIQUE INDEX Cases_UNIQUE (CASENO ASC),
	INDEX IX_Cases_FACID (FACID ASC),
	INDEX IX_Cases_MSID (MSID ASC),
	INDEX IX_Cases_SPYID (SPYID ASC),
	INDEX IX_Cases_SUBID (SUBID ASC),
	INDEX IX_Cases_FINALID (FINALID ASC),
	INDEX IX_Cases_GROSSID (GROSSID ASC),
	INDEX IX_Cases_FINALED (FINALED ASC),
	CONSTRAINT FK_Cases_Facilities
	FOREIGN KEY (FACID)
	REFERENCES PowerJ.Facilities (FACID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Cases_Specialties
	FOREIGN KEY (SPYID)
	REFERENCES PowerJ.Specialties (SPYID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Cases_Subspecial
	FOREIGN KEY (SUBID)
	REFERENCES PowerJ.Subspecial (SUBID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Cases_MasterSpecimens
	FOREIGN KEY (MSID)
	REFERENCES PowerJ.MasterSpecimens (MSID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Cases_Person1
	FOREIGN KEY (FINALID)
	REFERENCES PowerJ.Personnel (PERID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Cases_Person2
	FOREIGN KEY (GROSSID)
	REFERENCES PowerJ.Personnel (PERID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.Specimens (
	SPECID INT NOT NULL,
	CASEID INT NOT NULL,
	MSID SMALLINT(6) NOT NULL,
	NOBLOCKS SMALLINT(6) NOT NULL,
	NOSLIDES SMALLINT(6) NOT NULL,
	NOFRAGS SMALLINT(6) NOT NULL,
	VALUE1 DECIMAL(5, 3) NOT NULL,
	VALUE2 DECIMAL(5, 3) NOT NULL,
	VALUE3 DECIMAL(5, 3) NOT NULL,
	VALUE4 DECIMAL(5, 3) NOT NULL,
	DESCR VARCHAR(64) NOT NULL,
	PRIMARY KEY (SPECID ASC),
	INDEX IX_Specimens_CASEID (CASEID ASC),
	INDEX IX_Specimens_MSID (MSID ASC),
	CONSTRAINT FK_Specimens_Cases
	FOREIGN KEY (CASEID)
	REFERENCES PowerJ.Cases (CASEID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Specimens_MasterSpecimens
	FOREIGN KEY (MSID)
	REFERENCES PowerJ.MasterSpecimens (MSID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.Orders (
	SPECID INT NOT NULL,
	GRPID SMALLINT(6) NOT NULL,
	QTY SMALLINT(6) NOT NULL,
	VALUE1 DECIMAL(5, 3) NOT NULL,
	VALUE2 DECIMAL(5, 3) NOT NULL,
	VALUE3 DECIMAL(5, 3) NOT NULL,
	VALUE4 DECIMAL(5, 3) NOT NULL,
	PRIMARY KEY (SPECID ASC, GRPID ASC),
	INDEX IX_Orders_SPECID (SPECID ASC),
	INDEX IX_Orders_GRPID (GRPID ASC),
	CONSTRAINT FK_Orders_Specimens
	FOREIGN KEY (SPECID)
	REFERENCES PowerJ.Specimens (SPECID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Orders_Groups
	FOREIGN KEY (GRPID)
	REFERENCES PowerJ.Groups (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.Frozens (
	CASEID INT NOT NULL,
	PERID SMALLINT(6) NOT NULL,
	NOSPECS SMALLINT(6) NOT NULL,
	NOBLOCKS SMALLINT(6) NOT NULL,
	NOSLIDES SMALLINT(6) NOT NULL,
	VALUE1 DECIMAL(5, 3) NOT NULL,
	VALUE2 DECIMAL(5, 3) NOT NULL,
	VALUE3 DECIMAL(5, 3) NOT NULL,
	VALUE4 DECIMAL(5, 3) NOT NULL,
	PRIMARY KEY (CASEID ASC),
	INDEX IX_Frozens_PERID (PERID ASC),
	CONSTRAINT FK_Frozens_Cases
	FOREIGN KEY (CASEID)
	REFERENCES PowerJ.Cases (CASEID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Frozens_Persons
	FOREIGN KEY (PERID)
	REFERENCES PowerJ.Personnel (PERID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.Additional (
	CASEID INT NOT NULL,
	PERID SMALLINT(6) NOT NULL,
	CODEID SMALLINT(6) NOT NULL,
	FINALED date NOT NULL,
	VALUE1 DECIMAL(5, 3) NOT NULL,
	VALUE2 DECIMAL(5, 3) NOT NULL,
	VALUE3 DECIMAL(5, 3) NOT NULL,
	VALUE4 DECIMAL(5, 3) NOT NULL,
	PRIMARY KEY (CASEID ASC, PERID ASC, CODEID ASC, FINALED ASC),
	INDEX IX_Additional_CASEID (CASEID ASC),
	INDEX IX_Additional_PERID (PERID ASC),
	CONSTRAINT FK_Additional_Cases
	FOREIGN KEY (CASEID)
	REFERENCES PowerJ.Cases (CASEID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Additional_Persons
	FOREIGN KEY (PERID)
	REFERENCES PowerJ.Personnel (PERID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.Stats (
	CASEID INT NOT NULL,
	FACID SMALLINT(6) NOT NULL,
	GROSSID SMALLINT(6) NOT NULL,
	FINALID SMALLINT(6) NOT NULL,
	SPYID SMALLINT(6) NOT NULL,
	SUBID SMALLINT(6) NOT NULL,
	PROID SMALLINT(6) NOT NULL,
	NOSPECS SMALLINT(6) NOT NULL,
	NOBLOCKS SMALLINT(6) NOT NULL,
	NOSLIDES SMALLINT(6) NOT NULL,
	NOHE SMALLINT(6) NOT NULL,
	NOSS SMALLINT(6) NOT NULL,
	NOIHC SMALLINT(6) NOT NULL,
	NOMOL SMALLINT(6) NOT NULL,
	NOFSP SMALLINT(6) NOT NULL,
	NOFBL SMALLINT(6) NOT NULL,
	NOFSL SMALLINT(6) NOT NULL,
	NOSYN SMALLINT(6) NOT NULL,
	GRTAT SMALLINT(6) NOT NULL,
	ROTAT SMALLINT(6) NOT NULL,
	FITAT SMALLINT(6) NOT NULL,
	TOTAT SMALLINT(6) NOT NULL,
	MSID SMALLINT(6) NOT NULL,
	ACCESSED datetime NOT NULL,
	GROSSED datetime NOT NULL,
	ROUTED datetime NOT NULL,
	FINALED datetime NOT NULL,
	CASENO CHAR(12) NOT NULL,
	PRIMARY KEY (CASEID ASC),
	UNIQUE INDEX Stats_UNIQUE (CASENO ASC),
	INDEX IX_Stats_Final (FINALED ASC),
	INDEX IX_Stats_FACID (FACID ASC),
	INDEX IX_Stats_MSID (MSID ASC),
	INDEX IX_Stats_SPYID (SPYID ASC),
	INDEX IX_Stats_SUBID (SUBID ASC),
	INDEX IX_Stats_FINALED (FINALED ASC),
	CONSTRAINT FK_Stats_Facilities
	FOREIGN KEY (FACID)
	REFERENCES PowerJ.Facilities (FACID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Stats_Specialties
	FOREIGN KEY (SPYID)
	REFERENCES PowerJ.Specialties (SPYID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Stats_Subspecial
	FOREIGN KEY (SUBID)
	REFERENCES PowerJ.Subspecial (SUBID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Stats_MasterSpecimens
	FOREIGN KEY (MSID)
	REFERENCES PowerJ.MasterSpecimens (MSID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Stats_Person1
	FOREIGN KEY (FINALID)
	REFERENCES PowerJ.Personnel (PERID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Stats_Person2
	FOREIGN KEY (GROSSID)
	REFERENCES PowerJ.Personnel (PERID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.Pending (
	CASEID INT NOT NULL,
	FACID SMALLINT(6) NOT NULL,
	MSID SMALLINT(6) NOT NULL,
	GROSSTAT SMALLINT(6) NOT NULL,
	EMBEDTAT SMALLINT(6) NOT NULL,
	MICROTAT SMALLINT(6) NOT NULL,
	STAINTAT SMALLINT(6) NOT NULL,
	ROUTETAT SMALLINT(6) NOT NULL,
	HISTOTAT SMALLINT(6) NOT NULL,
	FINALTAT SMALLINT(6) NOT NULL,
	GROSSID SMALLINT(6) NOT NULL,
	EMBEDID SMALLINT(6) NOT NULL,
	MICROID SMALLINT(6) NOT NULL,
	STAINID SMALLINT(6) NOT NULL,
	ROUTEID SMALLINT(6) NOT NULL,
	FINALID SMALLINT(6) NOT NULL,
	SPYID SMALLINT(6) NOT NULL,
	SUBID SMALLINT(6) NOT NULL,
	PROID SMALLINT(6) NOT NULL,
	STATUS SMALLINT(6) NOT NULL,
	NOSPECS SMALLINT(6) NOT NULL,
	NOBLOCKS SMALLINT(6) NOT NULL,
	NOSLIDES SMALLINT(6) NOT NULL,
	ACCESSED datetime NOT NULL,
	GROSSED datetime NOT NULL,
	EMBEDED datetime NOT NULL,
	MICROED datetime NOT NULL,
	STAINED datetime NOT NULL,
	ROUTED datetime NOT NULL,
	FINALED datetime NOT NULL,
	CASENO CHAR(12) NOT NULL,
	PRIMARY KEY(CASEID ASC),
	UNIQUE INDEX Pending_UNIQUE (CASENO ASC),
	INDEX IX_Pending_FACID (FACID ASC),
	INDEX IX_Pending_MSID (MSID ASC),
	INDEX IX_Pending_SPYID (SPYID ASC),
	INDEX IX_Pending_SUBID (SUBID ASC),
	CONSTRAINT FK_Pending_Facilities
	FOREIGN KEY (FACID)
	REFERENCES PowerJ.Facilities (FACID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Pending_Specialties
	FOREIGN KEY (SPYID)
	REFERENCES PowerJ.Specialties (SPYID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Pending_Subspecial
	FOREIGN KEY (SUBID)
	REFERENCES PowerJ.Subspecial (SUBID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Pending_MasterSpecimens
	FOREIGN KEY (MSID)
	REFERENCES PowerJ.MasterSpecimens (MSID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.Comments (
	CASEID INT NOT NULL,
	COMMENT VARCHAR(32600) NOT NULL,
	PRIMARY KEY (CASEID ASC),
	CONSTRAINT FK_Comments_Cases
	FOREIGN KEY (CASEID)
	REFERENCES PowerJ.Cases (CASEID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Scheduler
-- -----------------------------------------------------
CREATE TABLE PowerJ.Workdays (
	ID INT NOT NULL,
	WODATE DATE NOT NULL,
	PRIMARY KEY (ID),
	UNIQUE INDEX Workdays_UNIQUE (WODATE ASC))
ENGINE = InnoDB;

CREATE TABLE PowerJ.Contracts (
	ID SMALLINT(6) NOT NULL,
	COTYPE TINYINT(4) NOT NULL,
	CONO1 TINYINT(4) NOT NULL,
	CONO2 TINYINT(4) NOT NULL,
	CONO3 TINYINT(4) NOT NULL,
	CONO4 TINYINT(4) NOT NULL,
	CONO5 TINYINT(4) NOT NULL,
	DESCR VARCHAR(64) NOT NULL,
	PRIMARY KEY (ID))
ENGINE = InnoDB;

CREATE TABLE PowerJ.Reasons (
	ID TINYINT(4) NOT NULL,
	INITIALS CHAR(3) NOT NULL,
	DESCR VARCHAR(64) NOT NULL,
	PRIMARY KEY (ID),
	UNIQUE INDEX Reasons_UNIQUE (INITIALS ASC))
ENGINE = InnoDB;

CREATE TABLE PowerJ.Skills (
	ID SMALLINT(6) NOT NULL,
	INITIALS CHAR(3) NOT NULL,
	DESCR VARCHAR(64) NOT NULL,
	PRIMARY KEY (ID),
	UNIQUE INDEX Reasons_UNIQUE (INITIALS ASC))
ENGINE = InnoDB;

CREATE TABLE PowerJ.Staff (
	PERID SMALLINT(6) NOT NULL,
	CONID SMALLINT(6) NOT NULL,
	FTE SMALLINT(6) NOT NULL,
	ACTIVE CHAR(1) NOT NULL,
	STARTD DATE NOT NULL,
	ENDDATE DATE,
	PRIMARY KEY (PERID),
	INDEX IX_Staff_COID (CONID ASC),
	CONSTRAINT FK_Staff_Personnel
	FOREIGN KEY (PERID)
	REFERENCES PowerJ.Personnel (PERID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_Staff_Contracts
	FOREIGN KEY (CONID)
	REFERENCES PowerJ.Contracts (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.StaffSkills (
	PERID SMALLINT(6) NOT NULL,
	SKID SMALLINT(6) NOT NULL,
	PRCNT SMALLINT(6) NOT NULL,
	PRIMARY KEY (PERID, SKID),
	INDEX IX_StaffSkills_PERID (PERID ASC),
	INDEX IX_StaffSkills_SKID (SKID ASC),
	CONSTRAINT FK_StaffSkills_Staff
	FOREIGN KEY (PERID)
	REFERENCES PowerJ.Staff (PERID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_StaffSkills_Skill
	FOREIGN KEY (SKID)
	REFERENCES PowerJ.Skills (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.Shifts (
	ID SMALLINT(6) NOT NULL,
	SKID SMALLINT(6) NOT NULL,
	LNKID SMALLINT(6) NOT NULL,
	FTE SMALLINT(6) NOT NULL,
	LNKTYPE TINYINT(4) NOT NULL,
	PRIORITY TINYINT(4) NOT NULL,
	NOPOS TINYINT(4) NOT NULL,
	ACTIVE CHAR(1) NOT NULL,
	SPLIT CHAR(1) NOT NULL,
	ALLWEEK CHAR(1) NOT NULL,
	MONDAY CHAR(1) NOT NULL,
	TUESDAY CHAR(1) NOT NULL,
	WEDNESDAY CHAR(1) NOT NULL,
	THURSDAY CHAR(1) NOT NULL,
	FRIDAY CHAR(1) NOT NULL,
	SEPARATE CHAR(2) NOT NULL,
	INITIALS CHAR(3) NOT NULL,
	DESCR VARCHAR(64) NOT NULL,
	PRIMARY KEY (ID),
	INDEX IX_SH_SKID (SKID ASC),
	CONSTRAINT FK_Shifts_Skills
	FOREIGN KEY (SKID)
	REFERENCES PowerJ.Skills (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE TABLE PowerJ.DaysOff (
	ID int(11) NOT NULL,
	FROMID int(11) NOT NULL,
	TOID int(11) NOT NULL,
	PERID smallint(6) NOT NULL,
	REID tinyint(4) NOT NULL,
	NODAYS tinyint(4) NOT NULL,
	STATUS char(1) NOT NULL,
	REQUEST datetime NOT NULL,
	REPLY datetime NOT NULL,
	COMA varchar(256) NOT NULL,
	COMS varchar(256) NOT NULL,
	PRIMARY KEY (ID),
	INDEX IX_DaysOff_PERID (PERID),
	INDEX IX_DaysOff_Reasons (REID),
	INDEX IX_DaysOff_FROMID (FROMID),
	INDEX IX_DaysOff_TOID (TOID),
	CONSTRAINT FK_DaysOff_Staff
	FOREIGN KEY (PERID)
	REFERENCES PowerJ.Staff (PERID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_DaysOff_Reasons
	FOREIGN KEY (REID)
	REFERENCES PowerJ.Reasons (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_DaysOff_FROMID
	FOREIGN KEY (FROMID)
	REFERENCES PowerJ.Workdays (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_DaysOff_TOID
	FOREIGN KEY (TOID)
	REFERENCES PowerJ.Workdays (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE=InnoDB;

CREATE TABLE PowerJ.ShiftAssignments (
	WOID INT NOT NULL,
	SHID SMALLINT(6) NOT NULL,
	PERID SMALLINT(6) NOT NULL,
	PRIMARY KEY (WOID, SHID, PERID),
	INDEX IX_ShiftAss_PERID (PERID ASC),
	INDEX IX_ShiftAss_WOID (WOID ASC),
	INDEX IX_ShiftAss_SHID (SHID ASC),
	CONSTRAINT FK_ShiftAss_Staff
	FOREIGN KEY (PERID)
	REFERENCES PowerJ.Staff (PERID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_ShiftAss_Workdays
	FOREIGN KEY (WOID)
	REFERENCES PowerJ.Workdays (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_ShiftAss_Shifts
	FOREIGN KEY (SHID)
	REFERENCES PowerJ.Shifts (ID)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Create Views
-- -----------------------------------------------------
CREATE VIEW PowerJ.udvAccessions
AS
	SELECT a.ACCID, a.SPYID, a.DASH, a.WLOAD, a.ACCNAME,
		s.CODESPEC, s.DASH AS SDASH, s.WLOAD AS SWLOAD, s.SPYNAME
	FROM PowerJ.Accessions AS a
	INNER JOIN PowerJ.Specialties AS s ON a.SPYID = s.SPYID;

CREATE VIEW PowerJ.udvAdditional
AS
	SELECT a.CASEID, c.FACID, c.SPYID, c.SUBID, a.PERID,
		a.CODEID, a.VALUE1, a.VALUE2, a.VALUE3, a.VALUE4,
		a.FINALED, c.CASENO, f.CODE, b.SUBINIT, p.INITIALS, s.SPYNAME
	FROM PowerJ.Additional AS a
		INNER JOIN PowerJ.Cases AS c ON c.CASEID = a.CASEID
		INNER JOIN PowerJ.Facilities AS f ON f.FACID = c.FACID
		INNER JOIN PowerJ.Personnel AS p ON p.PERID = a.PERID
		INNER JOIN PowerJ.Specialties AS s ON s.SPYID = c.SPYID
		INNER JOIN PowerJ.Subspecial AS b ON b.SUBID = c.SUBID;

CREATE VIEW PowerJ.udvCases
AS
	SELECT c.CASEID, c.FACID, c.SPYID, c.SUBID, c.FINALID, c.PROID,
		c.NOSYNOPT, c.NOSPECS, c.NOBLOCKS, c.NOSLIDES, c.NOFS,
		c.VALUE1, c.VALUE2, c.VALUE3, c.VALUE4, c.FINALED,
		c.GROSSTAT, c.ROUTETAT, c.FINALTAT, c.TOTALTAT,
		c.CASENO, f.CODE AS FACI, b.SUBINIT, p.INITIALS, s.SPYNAME, m.CODE AS SPEC
	FROM PowerJ.Cases AS c
	INNER JOIN PowerJ.Facilities AS f ON f.FACID = c.FACID
	INNER JOIN PowerJ.Specialties AS s ON s.SPYID = c.SPYID
	INNER JOIN PowerJ.Subspecial AS b ON b.SUBID = c.SUBID
	INNER JOIN PowerJ.MasterSpecimens AS m ON m.MSID = c.MSID
	INNER JOIN PowerJ.Personnel AS p ON p.PERID = c.FINALID;

CREATE VIEW PowerJ.udvDashboard
AS
	SELECT p.CASEID, p.FACID, p.GROSSTAT, p.EMBEDTAT,
		p.MICROTAT, p.STAINTAT, p.ROUTETAT, p.FINALTAT, p.GROSSID,
		p.EMBEDID, p.MICROID, p.STAINID, p.ROUTEID, p.FINALID, p.SUBID,
		p.PROID, p.STATUS, p.NOSPECS, p.NOBLOCKS, p.NOSLIDES, p.ACCESSED,
		p.GROSSED, p.EMBEDED, p.MICROED, p.STAINED, p.ROUTED, p.FINALED,
		p.CASENO, s.SUBINIT, m.CODE, m.GROSS, m.EMBED, m.MICROTOMY,
		m.ROUTE, m.SIGNOUT, p1.INITIALS AS GROSSINI,
		p2.INITIALS AS EMBEDINI, p3.INITIALS AS MICROINI,
		p4.INITIALS AS STAININI, p5.INITIALS AS ROUTEINI,
		p6.INITIALS AS FINALINI
	FROM PowerJ.Pending AS p
	INNER JOIN PowerJ.Subspecial AS s ON s.SUBID = p.SUBID
	INNER JOIN PowerJ.MasterSpecimens AS m ON m.MSID = p.MSID
	INNER JOIN PowerJ.Personnel AS p1 ON p1.PERID = p.GROSSID
	INNER JOIN PowerJ.Personnel AS p2 ON p2.PERID = p.EMBEDID
	INNER JOIN PowerJ.Personnel AS p3 ON p3.PERID = p.MICROID
	INNER JOIN PowerJ.Personnel AS p4 ON p4.PERID = p.STAINID
	INNER JOIN PowerJ.Personnel AS p5 ON p5.PERID = p.ROUTEID
	INNER JOIN PowerJ.Personnel AS p6 ON p6.PERID = p.FINALID;

CREATE VIEW PowerJ.udvDashLastRun
AS
	SELECT MAX(ACCESSED) AS accession
	FROM PowerJ.Pending;

CREATE VIEW PowerJ.udvFrozens
AS
	SELECT r.CASEID, r.PERID, r.NOSPECS, r.NOBLOCKS, r.NOSLIDES,
		r.VALUE1, r.VALUE2, r.VALUE3, r.VALUE4, c.FACID,
		c.SPYID, c.SUBID, c.NOFS, c.ACCESSED, c.CASENO,
		c.PROID, f.CODE, s.SPYNAME, b.SUBINIT, p.INITIALS
	FROM PowerJ.Frozens AS r
		INNER JOIN PowerJ.Cases AS c ON c.CASEID = r.CASEID
		INNER JOIN PowerJ.Facilities AS f ON f.FACID = c.FACID
		INNER JOIN PowerJ.Personnel AS p ON p.PERID = r.PERID
		INNER JOIN PowerJ.Specialties AS s ON s.SPYID = c.SPYID
		INNER JOIN PowerJ.Subspecial AS b ON b.SUBID = c.SUBID;

CREATE VIEW PowerJ.udvGroups
AS
	SELECT g.ID, g.GRP, g.CODE1, g.CODE2, g.CODE3,
		g.CODE4, g.NAME, c1.NAME AS NAME1, c2.NAME AS NAME2,
		c3.NAME AS NAME3, c4.NAME AS NAME4
	FROM PowerJ.Groups AS g
	INNER JOIN PowerJ.Coder1 AS c1 ON c1.ID = g.CODE1
	INNER JOIN PowerJ.Coder2 AS c2 ON c2.ID = g.CODE2
	INNER JOIN PowerJ.Coder3 AS c3 ON c3.ID = g.CODE3
	INNER JOIN PowerJ.Coder4 AS c4 ON c4.ID = g.CODE4;

CREATE VIEW PowerJ.udvMasterOrders
AS
	SELECT o.ID, o.GRPID, o.CODE, o.DESCR, g.GRP,
		g.NAME AS NAMEG, c1.NAME AS NAME1, c2.NAME AS NAME2,
		c3.NAME AS NAME3, c4.NAME AS NAME4
	FROM PowerJ.MasterOrders AS o
	INNER JOIN PowerJ.Groups AS g ON g.ID = o.GRPID
	INNER JOIN PowerJ.Coder1 AS c1 ON c1.ID = g.CODE1
	INNER JOIN PowerJ.Coder2 AS c2 ON c2.ID = g.CODE2
	INNER JOIN PowerJ.Coder3 AS c3 ON c3.ID = g.CODE3
	INNER JOIN PowerJ.Coder4 AS c4 ON c4.ID = g.CODE4;

CREATE VIEW PowerJ.udvMasterSpec
AS
	SELECT m.MSID, m.SPYID, m.SUBID, m.PROCID,
		m.ISLN, m.GROSS, m.EMBED, m.MICROTOMY, m.ROUTE, m.SIGNOUT, m.CODE1B,
		m.CODE1M, m.CODE1R, m.CODE2B, m.CODE2M, m.CODE2R, m.CODE3B, m.CODE3M,
		m.CODE3R, m.CODE4B, m.CODE4M, m.CODE4R, m.CODE, m.DESCR, s.SPYNAME,
		b.SUBNAME, c1b.NAME AS CODE1NB, c1m.NAME AS CODE1NM, c1r.NAME AS CODE1NR,
		c2b.NAME AS CODE2NB, c2m.NAME AS CODE2NM, c2r.NAME AS CODE2NR,
		c3b.NAME AS CODE3NB, c3m.NAME AS CODE3NM, c3r.NAME AS CODE3NR,
		c4b.NAME AS CODE4NB, c4m.NAME AS CODE4NM, c4r.NAME AS CODE4NR
	FROM PowerJ.MasterSpecimens AS m
	INNER JOIN PowerJ.Coder1 AS c1b ON c1b.ID = m.CODE1B
	INNER JOIN PowerJ.Coder2 AS c2b ON c2b.ID = m.CODE2B
	INNER JOIN PowerJ.Coder3 AS c3b ON c3b.ID = m.CODE3B
	INNER JOIN PowerJ.Coder4 AS c4b ON c4b.ID = m.CODE4B
	INNER JOIN PowerJ.Coder1 AS c1m ON c1m.ID = m.CODE1M
	INNER JOIN PowerJ.Coder2 AS c2m ON c2m.ID = m.CODE2M
	INNER JOIN PowerJ.Coder3 AS c3m ON c3m.ID = m.CODE3M
	INNER JOIN PowerJ.Coder4 AS c4m ON c4m.ID = m.CODE4M
	INNER JOIN PowerJ.Coder1 AS c1r ON c1r.ID = m.CODE1R
	INNER JOIN PowerJ.Coder2 AS c2r ON c2r.ID = m.CODE2R
	INNER JOIN PowerJ.Coder3 AS c3r ON c3r.ID = m.CODE3R
	INNER JOIN PowerJ.Coder4 AS c4r ON c4r.ID = m.CODE4R
	INNER JOIN PowerJ.Specialties AS s ON s.SPYID = m.SPYID
	INNER JOIN PowerJ.Subspecial AS b ON b.SUBID = m.SUBID;

CREATE VIEW PowerJ.udvOrders
AS
	SELECT o.SPECID, o.QTY, o.VALUE1, o.VALUE2, o.VALUE3, o.VALUE4, g.NAME
	FROM PowerJ.Orders AS o
	INNER JOIN PowerJ.Groups AS g ON g.ID = o.GRPID;

CREATE VIEW PowerJ.udvSpecimens
AS
	SELECT s.SPECID, s.CASEID, s.MSID, s.NOBLOCKS, s.NOSLIDES, s.NOFRAGS, s.VALUE1, s.VALUE2,
		s.VALUE3, s.VALUE4, s.DESCR, m.CODE, m.DESCR AS MDESCR, c.FACID, c.SPYID, 
		c.SUBID, c.FINALED, c.CASENO
	FROM PowerJ.Specimens AS s 
	INNER JOIN PowerJ.MasterSpecimens AS m ON m.MSID = s.MSID
	INNER JOIN PowerJ.Cases AS c ON c.CASEID = s.CASEID;

CREATE VIEW PowerJ.udvStats
AS
	SELECT s.CASEID, s.FACID, s.SPYID, s.SUBID, s.PROID, s.FINALID,
		s.NOSPECS, s.NOBLOCKS, s.NOSLIDES, s.NOHE, s.noSS, s.NOIHC,
		s.NOMOL, s.NOFSP, s.NOFBL, s.NOFSL, s.NOSYN, s.GRTAT,
		s.ROTAT, s.FITAT, s.TOTAT, s.ACCESSED, s.GROSSED, s.ROUTED,
		s.FINALED, s.CASENO, f.CODE AS FACI, y.SPYNAME, b.SUBINIT,
		p.PLAST, m.CODE AS SPEC
	FROM PowerJ.Stats AS s
	INNER JOIN PowerJ.Facilities AS f ON f.FACID = s.FACID
	INNER JOIN PowerJ.Specialties AS y ON y.SPYID = s.SPYID
	INNER JOIN PowerJ.Subspecial AS b ON b.SUBID = s.SUBID
	INNER JOIN PowerJ.Personnel AS p ON p.PERID = s.FINALID
	INNER JOIN PowerJ.MasterSpecimens AS m ON m.MSID = s.MSID;

CREATE VIEW PowerJ.udvStatsLastRun
AS
	SELECT MAX(FINALED) AS finaled 
	FROM PowerJ.Stats;

CREATE VIEW PowerJ.udvSubspecial
AS
	SELECT b.SUBID, b.SPYID, b.SUBINIT, b.SUBNAME, s.SPYNAME
	FROM Subspecial AS b
	INNER JOIN Specialties AS s ON s.SPYID = b.SPYID;

-- -----------------------------------------------------
-- Create Procedures
-- -----------------------------------------------------

delimiter //

CREATE PROCEDURE PowerJ.udpAccessionsName ()
BEGIN
	SELECT ACCID, SPYID, DASH, WLOAD, ACCNAME,
		CODESPEC, SDASH, SWLOAD, SPYNAME
	FROM PowerJ.udvAccessions
	ORDER BY ACCNAME;
END //

CREATE PROCEDURE PowerJ.udpAdditionalCaseID (p1 int)
BEGIN
	SELECT FINALED, PERID, CODEID, CASENO
	FROM PowerJ.udvAdditional
	WHERE CASEID = p1
	ORDER BY FINALED;
END //

CREATE PROCEDURE PowerJ.udpAdditionalsCaseID (p1 int)
BEGIN
	SELECT PERID, CODEID, VALUE1, VALUE2,
	VALUE3, VALUE4, FINALED, INITIALS
	FROM PowerJ.udvAdditional
	WHERE CASEID =  p1
	ORDER BY FINALED;
END //

CREATE PROCEDURE PowerJ.udpAdditionalSum (p1 datetime, p2 datetime)
BEGIN
	SELECT FACID, SPYID, SUBID, PERID,
		CODE, SPYNAME, SUBINIT, INITIALS,
		SUM(VALUE1) AS VALUE1, SUM(VALUE2) AS VALUE2,
		SUM(VALUE3) AS VALUE3, SUM(VALUE4) AS VALUE4
	FROM PowerJ.udvAdditional
	WHERE FINALED BETWEEN p1 AND p2
	GROUP BY FACID, SPYID, SUBID, PERID, CODE, SPYNAME, SUBINIT, INITIALS
	ORDER BY CODE, SPYID, SUBID, PERID;
END //

CREATE PROCEDURE PowerJ.udpCasesSum (p1 datetime, p2 datetime)
BEGIN
	SELECT FACID, SPYID, SUBID, FINALID,
		FACI, SPYNAME, SUBINIT, INITIALS,
		COUNT(CASEID) AS NOCASES,
		SUM(NOSLIDES) AS NOSLIDES,
		SUM(VALUE1) AS VALUE1,
		SUM(VALUE2) AS VALUE2,
		SUM(VALUE3) AS VALUE3,
		SUM(VALUE4) AS VALUE4
	FROM PowerJ.udvCases
	WHERE FINALED BETWEEN p1 AND p2
	GROUP BY FACID, SPYID, SUBID, FINALID,
		FACI, SPYNAME, SUBINIT, INITIALS
	ORDER BY FACI, SPYID, SUBID, FINALID;
END //

CREATE PROCEDURE PowerJ.udpCommentsCaseID (p1 int)
BEGIN
	SELECT COMMENT FROM PowerJ.Comments WHERE CASEID = p1;
END //

CREATE PROCEDURE PowerJ.udpDashboardCaseID ()
BEGIN
	SELECT *
	FROM PowerJ.udvDashboard
	ORDER BY CASEID;
END //

CREATE PROCEDURE PowerJ.udpDashboardPending ()
BEGIN
	SELECT CASEID, FACID, MSID, GROSSTAT, EMBEDTAT, MICROTAT,
		STAINTAT, ROUTETAT, HISTOTAT, FINALTAT, GROSSID, EMBEDID,
		MICROID, STAINID, ROUTEID, FINALID, SPYID, SUBID, PROID,
		STATUS, NOSPECS, NOBLOCKS, NOSLIDES, ACCESSED, GROSSED,
		EMBEDED, MICROED, STAINED, ROUTED, FINALED, CASENO
	FROM PowerJ.Pending
	WHERE STATUS < 7
	ORDER BY CASEID;
END //

CREATE PROCEDURE PowerJ.udpErrorsCaseID (p1 int)
BEGIN
	SELECT COMMENT FROM PowerJ.Errors WHERE CASEID = p1;
END //

CREATE PROCEDURE PowerJ.udpErrorZ ()
BEGIN
	SELECT CASEID, ERRID, CASENO
	FROM PowerJ.Errors
	WHERE ERRID = 0
	ORDER BY CASEID;
END //

CREATE PROCEDURE PowerJ.udpErrorNZ ()
BEGIN
	SELECT CASEID, ERRID, CASENO
	FROM PowerJ.Errors
	WHERE ERRID > 0
	ORDER BY CASENO;
END //

CREATE PROCEDURE PowerJ.udpFrozensCaseID (p1 int)
BEGIN
	SELECT f.PERID, f.NOSPECS, f.NOBLOCKS, f.NOSLIDES, f.VALUE1, f.VALUE2,
		f.VALUE3, f.VALUE4, c.ACCESSED, p.INITIALS
	FROM PowerJ.Frozens AS f
	INNER JOIN Cases AS c ON c.CASEID = f.CASEID
	INNER JOIN Personnel AS p ON p.PERID = f.PERID
	WHERE f.CASEID = p1;
END //

CREATE PROCEDURE PowerJ.udpFrozensSum (p1 datetime, p2 datetime)
BEGIN
	SELECT FACID, SPYID, SUBID, PERID,
		CODE, SPYNAME, SUBINIT, INITIALS,
		COUNT(CASEID) AS NOCASES,
		SUM(NOSLIDES) AS NOSLIDES,
		SUM(VALUE1) AS VALUE1,
		SUM(VALUE2) AS VALUE2,
		SUM(VALUE3) AS VALUE3,
		SUM(VALUE4) AS VALUE4
	FROM PowerJ.udvFrozens
	WHERE ACCESSED BETWEEN p1 AND p2
	GROUP BY FACID, SPYID, SUBID, PERID,
		CODE, SPYNAME, SUBINIT, INITIALS
	ORDER BY CODE, SPYID, SUBID, PERID;
END //

CREATE PROCEDURE PowerJ.udpGroupsID ()
BEGIN
	SELECT *
	FROM PowerJ.udvGroups
	ORDER BY ID;
END //

CREATE PROCEDURE PowerJ.udpGroupsName ()
BEGIN
	SELECT *
	FROM PowerJ.udvGroups
	ORDER BY NAME;
END //

CREATE PROCEDURE PowerJ.udpMasterSpecID ()
BEGIN
	SELECT *
	FROM PowerJ.udvMasterSpec
	ORDER BY MSID;
END //

CREATE PROCEDURE PowerJ.udpMasterSpecName ()
BEGIN
	SELECT *
	FROM PowerJ.udvMasterSpec
	ORDER BY CODE;
END //

CREATE PROCEDURE PowerJ.udpOrdersSpecID (p1 int)
BEGIN
	SELECT *
	FROM PowerJ.udvOrders
	WHERE SPECID = p1
	ORDER BY NAME;
END //

CREATE PROCEDURE PowerJ.udpPathologists ()
BEGIN
	SELECT PERID, INITIALS 
	FROM PowerJ.Personnel
	WHERE CODE = 'PT' 
	ORDER BY INITIALS;
END //

CREATE PROCEDURE PowerJ.udpSpecimensCaseID (p1 int)
BEGIN
	SELECT SPECID, MSID, NOBLOCKS, NOSLIDES, NOFRAGS, VALUE1,
		VALUE2, VALUE3, VALUE4, DESCR, CODE, FINALED, CASENO
	FROM PowerJ.udvSpecimens
	WHERE CASEID =  p1
	ORDER BY SPECID;
END //

CREATE PROCEDURE PowerJ.udpStatsSum (p1 datetime, p2 datetime)
BEGIN
	SELECT FACID, SPYID, SUBID, PROID, FINALID, FACI,
		SPYNAME, SUBINIT, PLAST, COUNT(CASEID) AS NOCASES,
		SUM(NOSPECS) AS NOSPECS, SUM(NOBLOCKS) AS NOBLOCKS,
		SUM(NOSLIDES) AS NOSLIDES, SUM(NOHE) AS NOHE,
		SUM(noSS) AS noSS, SUM(NOIHC) AS NOIHC,
		SUM(NOMOL) AS NOMOL, SUM(NOFSP) AS NOFSP,
		SUM(NOFBL) AS NOFBL, SUM(NOFSL) AS NOFSL,
		SUM(NOSYN) AS NOSYN, SUM(GRTAT) AS GRTAT,
		SUM(ROTAT) AS ROTAT, SUM(FITAT) AS FITAT,
		SUM(TOTAT) AS TOTAT
	FROM PowerJ.udvStats
	WHERE FINALED BETWEEN p1 AND p2
	GROUP BY FACID, SPYID, SUBID, PROID, FINALID,
		FACI, SPYNAME, SUBINIT, PLAST
	ORDER BY FACI, SPYID, SUBID, PROID, FINALID;
END //

CREATE PROCEDURE PowerJ.udpSubspecialID ()
BEGIN
	SELECT SUBID, SPYID, SUBINIT, SUBNAME, SPYNAME
	FROM PowerJ.udvSubspecial
	ORDER BY SUBID;
END //

CREATE PROCEDURE PowerJ.udpSubspecialName ()
BEGIN
	SELECT SUBID, SPYID, SUBINIT, SUBNAME, SPYNAME
	FROM PowerJ.udvSubspecial
	ORDER BY SUBNAME;
END //

CREATE PROCEDURE PowerJ.udpTATSum (p1 datetime, p2 datetime)
BEGIN
	SELECT FACID, SPYID, SUBID, PROID, FINALID,
		FACI, SPYNAME, SUBINIT, INITIALS,
		COUNT(CASEID) AS NOCASES,
		SUM(GROSSTAT) AS GROSS,
		SUM(ROUTETAT) AS ROUTE,
		SUM(FINALTAT) AS FINAL,
		SUM(TOTALTAT) AS TOTAL
	FROM PowerJ.udvCases
	WHERE FINALED BETWEEN p1 AND p2
	GROUP BY FACID, SPYID, SUBID, PROID, FINALID,
		FACI, SPYNAME, SUBINIT, INITIALS
	ORDER BY FACI, SPYID, SUBID, FINALID;
END //

delimiter ;

